name: AQUA tests with pip

on:
  workflow_dispatch:
  schedule:
    - cron: "0 3 * * 1" #run every Monday night at 3AM UTC

jobs:
  aqua_test:
    env:
      DEBIAN_FRONTEND: noninteractive
      GRID_DEFINITION_PATH: /tmp
      RUNNER_ALLOW_RUNASROOT: 1
      FDB5_CONFIG_FILE: /app/config.yaml
    runs-on: ubuntu-latest
    container:
      # https://hub.docker.com/r/kinow/fdb
      image: kinow/fdb:5.11.17-jammy
      options: --user root
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      # The FDB docker image does not have git and other dependencies
      - name: Install GH Actions dependencies
        run: |
          # Ubuntu dependencies (Git, curl, ...)
          # We need to install cdo as we do not have conda here. Note that
          # cdo has a dependency on libeccodes-data and libeccodes0. Apparently,
          # installing it is enough to get tests that rely on cdo and ecCodes
          # to work on Ubuntu.
          # NOTE: tested two cache actions, but in the end looks like eccodes
          #       does not work very well when the apt package is cached.
          # actions/setup-python needs lsb-release
          apt-get update && \
            apt-get install -y \
              cdo \
              curl \
              git \
              lsb-release
      - name: Change ownership of home directory
        # GitHub Actions run under runner:docker, 1001:121.
        # But the commands like the one above run as root:root 0:0,
        # because we are using a container.
        run: |
          mkdir -pv /github/home/.cache/pip
          chown -R root:root /github/home/
          chown -R root:root /github/home/.cache
      - uses: actions/setup-python@v4
        with:
          python-version: '${{ matrix.python-version }}'
          cache: 'pip' # caching pip dependencies
          cache-dependency-path: |
            **/pyproject.toml
        env:
          # https://github.com/actions/setup-python/blob/main/docs/advanced-usage.md#linux
          AGENT_TOOLSDIRECTORY: '/opt/github/actions-runner/_work/_tool'
      - name: Provision with pip
        run: |
          # Update pip because we are using pyproject.toml (needs newer pip)
          python -m pip install -U pip

          # Install with test dependencies
          python -m pip install -e .[tests]
      - name: Download and setup tests
        run: |
          ./download_data_for_tests.sh
          
          # FDB for GSV
          rm -rf /app/
          cp -r ./AQUA_tests/fdb/ /app/
          mkdir -pv /app/localroot/
          cd /app/
          fdb-write sample_test_data.grib
          # The fdb-list command is a good smoke test.
          fdb-list class=ea,expver=0001
          # But the fdb-read using a request is more like what pyfdb does.
          # When it fails, the test.grib file will have 0 (zero) messages.
          fdb-read sample_test_data_fdb_request test.grib
          grib_dump test.grib
      - name: Run tests
        run: |
          pytest -m "aqua or slow or gsv"
