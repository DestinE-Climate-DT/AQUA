# Configuration file for aqua-analysis.sh

# Variables $AQUA and $OUTPUT can be used to refer to the root directory of AQUA
# and the output directory respectively

job:
    # The max_threads variable serves as a mechanism to control the maximum number of threads
    # i.e. diagnostic scripts that can run concurrently.
    # - If max_threads is set to 0 or a negative value: There is no limit on the number of threads,
    #                                                   and all processes run in parallel without waiting. 
    #                                                   This is suitable for situations where you want to utilize
    #                                                   the maximum available resources without any restrictions.
    # - If max_threads is set to a positive value: It limits the number of concurrent threads to the specified value. 
    #                                              After launching the designated number of threads, the script waits
    #                                              for these threads to complete before launching additional ones. 
    #                                              This is useful when you are working on a system with limitations
    #                                              on the number of concurrent threads, like a login node.

    max_threads: 0  # Set to the desired maximum number of threads, or leave it as 0 for no limit
    loglevel: "WARNING" # DEBUG, IN FO, WARNING, ERROR, CRITICAL

    # Run a dummy analysis to test the configuration and the presence of needed data
    run_dummy: false
    
    # Default output directory for the analysis. Can be overridden by the command line arguments
    outputdir: "${AQUA}/cli/aqua-analysis/output" 

    # Default values, overriden from command line arguments
    # catalog: "lumi"  # The catalog to use for the analysis, usually defined elsewhere
    model: "IFS-NEMO"
    exp: "historical-1990"
    source: "lra-r100-monthly"

    script_path_base: "${AQUA}/diagnostics"  # Base directory for the diagnostic scripts

cluster:  # options for dask cluster
    workers: 64
    threads: 1  # per worker
    memory_limit: 3.5GiB  # per worker

diagnostics:

  # List of diagnostics to run
  run: ["tropical_rainfall", "timeseries_atm", "seasonal_cycles",
        "radiation", "teleconnections_atm", "atmglobalmean",
        "timeseries_oce", "teleconnections_oce", "ocean3d_drift",
        "ocean3d_circulation", "seaice_extent", "seaice_conc",
        "seaice_volume", "seaice_thick", "ecmean"]

  # List of diagnostics

  # Each diagnostic can have the following options (all optional):
  #    nworkers: the number of workers to use for the diagnostic if a global dask cluster is not used. Default is 1.
  #              Notice: these are still provided mostly for testing the local cluster option, using a global cluster (not using this option) is the new default.
  #    extra: extra command line arguments to pass to the diagnostic script.
  #    outname: the name of the output directory for the diagnostic. Default is the diagnostic name itself.
  #    script_path: the location of the script to run the diagnostic.
  #                 Default script_path is "$script_path_base/$diagnostic/cli/cli_${diagnostic}.py"
  #    nocluster: boolean, if set to true, the diagnostic will not use the global dask cluster. Default false (needed for ECmean)

  atmglobalmean:
    nworkers: 16
  timeseries_atm:
    script_path: "../src/aqua_diagnostics/timeseries/cli_timeseries.py"
    extra: "--config ${AQUA}/config/diagnostics/timeseries/config_timeseries_atm.yaml"
    nworkers: 16
    outname: timeseries
  timeseries_oce:
    script_path: "../src/aqua_diagnostics/timeseries/cli_timeseries.py"
    extra: "--config ${AQUA}/config/diagnostics/timeseries/config_timeseries_oce.yaml"
    nworkers: 8
    outname: timeseries
  seasonal_cycles:
    script_path: "../src/aqua_diagnostics/timeseries/cli_timeseries.py"
    nworkers: 16
    extra: "--config ${AQUA}/config/diagnostics/timeseries/config_seasonalcycles_atm.yaml"
    outname: timeseries
  radiation:
    nworkers: 8
  teleconnections_atm:
    script_path: "teleconnections/cli/cli_teleconnections.py"
    nworkers: 8
    # Command line extra arguments for teleconnections:
    # --dry, -d (dry run, if set it will run without producing plots)
    # --ref (if set it will analyze also the reference data, it is set
    #        by default)
    #Â --interface (custom interface file)
    extra: "--config ${AQUA}/diagnostics/teleconnections/cli/cli_config_atm.yaml --ref"
    outname: teleconnections
  teleconnections_oce:
    script_path: "teleconnections/cli/cli_teleconnections.py"
    nworkers: 4
    extra: "--config ${AQUA}/diagnostics/teleconnections/cli/cli_config_oce.yaml --ref"
    outname: teleconnections
  tropical_rainfall:
    nworkers: 16
    #extra: "--regrid=r100 --freq=M --xmax=75 --bufferdir=${OUTPUT}/tropical_rainfall/"
    extra: "--regrid=r100 --freq=M --xmax=75 --bufferdir=/users/jvonhar/work/aqua-analysis/output/climatedt-phase1/IFS-NEMO/ssp370/tropical_rainfall/"
  ecmean:
    nworkers: 4
    nocluster: true
    extra: "--interface ${AQUA}/diagnostics/ecmean/config/interface_AQUA_destine-v1.yml"
  ocean3d_drift:
    script_path: "ocean3d/cli/cli_ocean3d.py"
    nworkers: 8
    extra: "--config ${AQUA}/diagnostics/ocean3d/cli/config.drift.yaml"
  ocean3d_circulation:
    script_path: "ocean3d/cli/cli_ocean3d.py"
    nworkers: 4
    extra: "--config ${AQUA}/diagnostics/ocean3d/cli/config.circulation.yaml"
  seaice_volume:
    script_path: "seaice/cli/cli_seaice.py"
    nworkers: 4
    # Command line extra arguments for seaice:
    # --all-regions (if set it will plot all regions)
    #               (default is False)
    # --config (seaice config file)
    # --regrid (regrid data to a different grid)
    extra: "--config ${AQUA}/diagnostics/seaice/cli/config_Volume.yaml"
  seaice_thick:
    script_path: "seaice/cli/cli_seaice.py"
    nworkers: 4
    extra: "--config ${AQUA}/diagnostics/seaice/cli/config_Thickness.yaml"
  seaice_conc:
    script_path: "seaice/cli/cli_seaice.py"
    nworkers: 4
    extra: "--config ${AQUA}/diagnostics/seaice/cli/config_Concentration.yaml"
  seaice_extent:
    script_path: "seaice/cli/cli_seaice.py"
    nworkers: 4
    extra: "--config ${AQUA}/diagnostics/seaice/cli/config_Extent.yaml"
