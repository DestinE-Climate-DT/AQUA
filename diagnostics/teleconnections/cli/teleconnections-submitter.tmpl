#!/bin/bash
#SBATCH --partition=<partition> # compute is suggested on levante
#SBATCH --job-name=<job_name>
#SBATCH --output=<job_name>_%j.out
#SBATCH --error=<job_name>_%j.err
#SBATCH --account=<account>
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=<ntasks_per_node>
#SBATCH --time=08:00:00
#SBATCH --mem=0
set -e

# configure AQUA folder path
export AQUA=<AQUA_PATH>

# get machine name
machine=levante

# if machine is levante use mamba/conda
if [ $machine == "levante" ]; then
    # find mamba/conda (to be refined)
    whereconda=$(which mamba | rev | cut -f 3-10 -d"/" | rev)
    source $whereconda/etc/profile.d/conda.sh

    # activate conda environment
    # be aware that the loaded environment is hard-coded to the default environment name
    conda activate aqua_common
fi 

function load_aqua() {
	# Load env modules on LUMI
    module purge
    module use LUMI/22.08
    module load python-xarray/3.10.6-cpeCray-22.08
}

# if machine is lumi use modules
if [ $machine == "lumi" ]; then
    load_aqua

    # get username
    username=$USER
    # be aware that the path to mambaforge is hard-coded to the default environment name
    export PATH="/users/$username/mambaforge/aqua_common/bin:$PATH"
fi

# run the Python script, both for the atmosphere and the ocean
# See README.md for more information on how to run the diagnostics and the options available

scriptpy="$AQUA/diagnostics/teleconnections/cli/cli_teleconnections.py"
oce_config="$AQUA/diagnostics/teleconnections/cli/cli_config_oce.yaml"
atm_config="$AQUA/diagnostics/teleconnections/cli/cli_config_atm.yaml"

# run the diagnostics
python $scriptpy --config $oce_config --ref
python $scriptpy --config $atm_config --ref
